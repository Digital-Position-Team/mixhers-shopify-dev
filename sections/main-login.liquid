<form id='login_with_shopify_customer_id' action='/tools/recurring/get-subscription-access'></form>
<script>document.querySelector('#login_with_shopify_customer_id').submit()</script> 

{% comment %}
{{ 'customer.css' | asset_url | stylesheet_tag }}

{%- style -%}
  /* @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .customer.login {
    max-width: 500px;
    margin: 0 auto;
    text-align: center;
  }

  .customer h1 {
    margin-bottom: 2rem;
    margin-top: 28px;
    font-family: 'Buenos Aires', sans-serif;
  }
  .customer form {
    margin-bottom: 6rem;
  }

  .field {
    margin-bottom: 1.5rem;
    text-align: left;
  }

  .field label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
  }

  .field input {
    width: 100%;
    padding: 12px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
  }

  .field input:focus {
    outline: none;
    border-color: #ff59e4;
    box-shadow: 0 0 0 2px rgba(255, 89, 228, 0.2);
  }

  .customer button {
    background: #ff59e4;
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 50px;
    cursor: pointer;
    font-weight: 600;
    margin: 1rem 0;
    width: 100%;
    font-size: 1rem;
  }

  .customer button:hover {
    background: #e54dd1;
  }

  .customer a {
    color: #ff59e4;
    text-decoration: none;
    display: inline-block;
    margin: 0.5rem 0;
  }

  .customer a:hover {
    text-decoration: underline;
  }

  #recover {
    display: none;
  }

  .form__message {
    background: #d4edda;
    border: 1px solid #c3e6cb;
    color: #155724;
    padding: 1rem;
    border-radius: 4px;
    margin-bottom: 1rem;
  }

  .form__message.form-message--error {
    background: #f8d7da;
    border: 1px solid #f5c6cb;
    color: #721c24;
  }

  small.form__message {
    background: #f8d7da;
    border: 1px solid #f5c6cb;
    color: #721c24;
    display: block;
    margin-top: -1rem;
    margin-bottom: 1rem;
  }
  .account-actions {
    display: flex;
    justify-content: space-between;
  }
  .account-actions a {
    color: black;
    font-family: 'Buenos Aires', sans-serif;
  }
  #rc_login {
    display: none !important;
  }
  @media screen and (max-width: 768px) {
    .account-actions {
      flex-direction: column;
    }
  } */
{%- endstyle -%}

<div class="customer login section-{{ section.id }}-padding">
  <h1>Login</h1>
  
  {%- form 'customer_login', novalidate: 'novalidate' -%}
    {%- if form.errors -%}
      <div class="form__message form-message--error">
        <h2 class="form-message__title h3" tabindex="-1" autofocus>
          {{ 'templates.contact.form.error_heading' | t }}
        </h2>
        {{ form.errors | default_errors }}
      </div>
    {%- endif -%}

    <div class="field">
      <input
        type="email"
        name="customer[email]"
        id="CustomerEmail"
        autocomplete="email"
        autocorrect="off"
        autocapitalize="off"
        placeholder="{{ 'customer.login.email' | t }}"
        {%- if form.errors contains 'form' -%}
          aria-invalid="true"
          aria-describedby="CustomerEmail-error"
        {%- endif -%}
      >
      <label for="CustomerEmail">
        Email
      </label>
      {%- if form.errors contains 'form' -%}
        <small id="CustomerEmail-error" class="form__message">
          <span class="visually-hidden">Error</span>
          There was a problem with your submission:
        </small>
      {%- endif -%}
    </div>

    {%- if form.password_needed -%}
      <div class="field">
        <input
          type="password"
          value=""
          name="customer[password]"
          id="CustomerPassword"
          autocomplete="current-password"
          placeholder="Password"
          {%- if form.errors contains 'form' -%}
            aria-invalid="true"
            aria-describedby="CustomerPassword-error"
          {%- endif -%}
        >
        <label for="CustomerPassword">
          Password
        </label>
        {%- if form.errors contains 'form' -%}
          <small id="CustomerPassword-error" class="form__message">
            <span class="visually-hidden">Error</span>
            There was a problem with your submission:
          </small>
        {%- endif -%}
      </div>
    {%- endif -%}

    <button type="submit">
      Sign in
    </button>

    <div class="account-actions">
      <a href="#recover">Forgot your password?</a>
      <a href="{{ routes.account_register_url }}">Create account</a>
    </div>
  {%- endform -%}
</div>

<div class="customer recover section-{{ section.id }}-padding" id="recover">
  <h1>Reset your password</h1>
  <p>We will send you an email to reset your password.</p>
  
  {%- form 'recover_customer_password' -%}
    {% assign recover_success = form.posted_successfully? %}
    {%- if form.errors -%}
      <div class="form__message form-message--error">
        <h2 class="form-message__title h3" tabindex="-1" autofocus>
          {{ 'templates.contact.form.error_heading' | t }}
        </h2>
        {{ form.errors | default_errors }}
      </div>
    {%- endif -%}

    {%- if recover_success -%}
      <div class="form__message">
        <h3 class="form-message__title h3" tabindex="-1" autofocus>
          We've sent you an email with a link to update your password.
        </h3>
      </div>
    {%- endif -%}

    <div class="field">
      <input
        type="email"
        value=""
        name="email"
        id="RecoverEmail"
        autocomplete="email"
        autocorrect="off"
        autocapitalize="off"
        placeholder="Email"
        {%- if form.errors -%}
          aria-invalid="true"
          aria-describedby="RecoverEmail-error"
        {%- endif -%}
      >
            <label for="RecoverEmail">
        Email
      </label>
      {%- if form.errors -%}
        <small id="RecoverEmail-error" class="form__message">
          <span class="visually-hidden">Error</span>
          {{ form.errors.messages['form'] }}
        </small>
      {%- endif -%}
    </div>

    <button type="submit">
      Submit
    </button>

    <a href="#login">Cancel</a>
  {%- endform -%}
</div>

</div>

<script>
  class LoginForm extends HTMLElement {
    constructor() {
      super();

      const recoverPasswordLink = this.querySelector('#RecoverPassword');
      const hideRecoverPasswordLink = this.querySelector('#HideRecoverPasswordLink');
      const recoverPasswordForm = this.querySelector('#RecoverForm');
      const customerLoginForm = this.querySelector('#CustomerLoginForm');

      recoverPasswordLink.addEventListener('click', (event) => {
        event.preventDefault();
        this.toggleRecoverPasswordForm();
      });

      if (hideRecoverPasswordLink) {
        hideRecoverPasswordLink.addEventListener('click', (event) => {
          event.preventDefault();
          this.hideRecoverPasswordForm();
        });
      }

      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.has('form_type') && urlParams.get('form_type') === 'recover_customer_password') {
        this.toggleRecoverPasswordForm();
      }
    }

    toggleRecoverPasswordForm() {
      this.querySelector('#RecoverForm').style.display = 'block';
      this.querySelector('#CustomerLoginForm').style.display = 'none';
    }

    hideRecoverPasswordForm() {
      this.querySelector('#RecoverForm').style.display = 'none';
      this.querySelector('#CustomerLoginForm').style.display = 'block';
    }
  }

  const loginForm = document.querySelector('.customer.login');
  if (loginForm) {
    // Simple toggle functionality
    const recoverLinks = loginForm.querySelectorAll('a[href="#recover"]');
    const loginLinks = document.querySelectorAll('a[href="#login"]');
    const recoverForm = document.querySelector('#recover');
    const loginFormEl = document.querySelector('.customer.login');

    recoverLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        loginFormEl.style.display = 'none';
        recoverForm.style.display = 'block';
      });
    });

    loginLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        recoverForm.style.display = 'none';
        loginFormEl.style.display = 'block';
      });
    });
  }
</script>
{% endcomment %}

{% schema %}
{
  "name": "Login",
  "settings": [
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ]
}
{% endschema %}
